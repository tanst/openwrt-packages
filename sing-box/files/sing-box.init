#!/bin/sh /etc/rc.common
#
# Copyright (C)  by Toy
#

START=99
USE_PROCD=1

#####  ONLY CHANGE THIS BLOCK  ######
PROG="/usr/bin/sing-box"
RUN_DIR="/var/run/sing-box"
RES_DIR="/etc/sing-box"          # resource dir / working dir / the dir where you store ip/domain lists
CONF="/etc/sing-box/config.json" # where is the config file, it can be a relative path to $RES_DIR
USER="sing-box"
# we don't know which is the default server, just take the first one
DNSMASQ_UCI_CONFIG="$(uci -q show "dhcp.@dnsmasq[0]" | awk 'NR==1 {split($0, conf, /[.=]/); print conf[2]}')"
if [ -f "/tmp/etc/dnsmasq.conf.$DNSMASQ_UCI_CONFIG" ]; then
    DNSMASQ_DIR="$(awk -F '=' '/^conf-dir=/ {print $2}' "/tmp/etc/dnsmasq.conf.$DNSMASQ_UCI_CONFIG")/dnsmasq-singbox.d"
else
    DNSMASQ_DIR="/tmp/dnsmasq.d/dnsmasq-singbox.d"
fi
#####  ONLY CHANGE THIS BLOCK  ######

start_service() {
    mkdir -p "$RUN_DIR"
    sed -i 's/5336:5336/0:5336/' "/etc/passwd"

    echo "Starting default sing-box with config: $CONF"
    procd_open_instance
    procd_set_param command $PROG run -D $RUN_DIR -c $CONF

    procd_set_param user $USER
    procd_set_param file $CONF
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn "${respawn_threshold:-3600}" "${respawn_timeout:-5}" "${respawn_retry:-5}"
    procd_close_instance

    # Iterate over all JSON files in /etc/sing-box/ except config.json
    for cfg in $RES_DIR/*.json; do
        if [ "$cfg" != "$CONF" ]; then
            # Create a unique run directory for each instance
            CONFIG_NAME=$(basename "$cfg" .json)
            INSTANCE_RUN_DIR="/var/run/sing-box/$CONFIG_NAME"
            mkdir -p "$INSTANCE_RUN_DIR"

            echo "Starting sing-box with config: $cfg in $INSTANCE_RUN_DIR"
            procd_open_instance
            procd_set_param command $PROG run -D "$INSTANCE_RUN_DIR" -c "$cfg"
            procd_set_param user $USER
            procd_set_param file "$cfg"
            procd_set_param stdout 1
            procd_set_param stderr 1
            procd_set_param respawn "${respawn_threshold:-3600}" "${respawn_timeout:-5}" "${respawn_retry:-5}"
            procd_close_instance
        fi
    done

    ip rule add fwmark 0x1ed4 table 100
    ip route add local default dev lo table 100
    ip -6 rule add fwmark 0x1ed4 table 100
    ip -6 route add local default dev lo table 100
    nft -f /etc/sing-box/tproxy.nft

    # DNSMasq
    mkdir -p "$DNSMASQ_DIR"
    echo -e "conf-dir=$DNSMASQ_DIR" >"$DNSMASQ_DIR/../dnsmasq-singbox.conf"
    cat <<-EOF >>"$DNSMASQ_DIR/redirect-dns.conf"
				no-poll
				no-resolv
				server=127.0.0.1#5333
			EOF
    /etc/init.d/dnsmasq restart >"/dev/null" 2>&1

    if ! crontab -l | grep -q "$RES_DIR/scripts/update_china_ip.sh"; then
        echo -e "0 5 * * * $RES_DIR/scripts/update_china_ip.sh" >>"/etc/crontabs/root"
        /etc/init.d/cron restart
    else
        echo "Cron job already exists, skipping addition."
    fi

    echo "sing-box is started!"
}

stop_service() {
    sed -i "/$RES_DIR/d" "/etc/crontabs/root" 2>"/dev/null"
    /etc/init.d/cron restart >"/dev/null" 2>&1
    ip rule del fwmark 0x1ed4 table 100 2>/dev/null
    ip route del local default dev lo table 100 2>/dev/null
    ip -6 rule del fwmark 0x1ed4 table 100 2>/dev/null
    ip -6 route del local default dev lo table 100 2>/dev/null
    nft flush table inet singbox 2>/dev/null
    nft delete table inet singbox 2>/dev/null

    # Remove DNS hijack
    rm -rf "$DNSMASQ_DIR/../dnsmasq-singbox.conf" "$DNSMASQ_DIR"
    /etc/init.d/dnsmasq restart >"/dev/null" 2>&1

    service_stop $PROG

    echo "sing-box is stopped!"
}

reload_service() {
    echo "Reloading sing-box..."

    stop
    sleep 2s
    start
}

restart() {
    reload
}
