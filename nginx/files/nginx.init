#!/bin/sh /etc/rc.common
# Copyright (C) 2015 OpenWrt.org

START=80

USE_PROCD=1

G_OPTS="daemon off;"

CONF=""

wait_for_dns() {
    local count=0
    local max_retries=30
    local delay=2

    while [ $count -lt $max_retries ]; do
        if nslookup movie.douban.com >/dev/null 2>&1; then
            echo "DNS 解析正常"
            return 0
        else
            echo "等待 DNS 服务..."
            sleep $delay
            count=$((count + 1))
        fi
    done

    echo "DNS 服务不可用，放弃启动 Nginx"
    return 1
}

nginx_init() {
	[ -z "${CONF}" ] || return # already called.

	[ -d /var/log/nginx ] || mkdir -p /var/log/nginx
	[ -d /var/lib/nginx ] || mkdir -p /var/lib/nginx

	CONF="/etc/nginx/nginx.conf"

	local message
	message="$(/usr/sbin/nginx -t -c "${CONF}" -g "${G_OPTS}" 2>&1)" ||
		{
			echo -e "${message}" | logger -t "nginx_init" -p "daemon.err"
			logger -s -t "nginx_init" -p "daemon.err" "NOT using conf file!"
			echo "show config to be used by: nginx -T -c '${CONF}'" >&2
			exit 1
		}

	logger -t "nginx_init" -p "daemon.info" "using ${CONF} (the test is ok)"
}

start_service() {
	wait_for_dns || exit 1
	nginx_init

	procd_open_instance
	procd_set_param command /usr/sbin/nginx -c "${CONF}" -g "${G_OPTS}"
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param file "${CONF}"
	procd_set_param respawn
	procd_close_instance
}

reload_service() {
	nginx_init

	if [ "$(cat "/proc/$(cat "/var/run/nginx.pid")/cmdline")" = \
		"nginx: master process /usr/sbin/nginx -c ${CONF} -g ${G_OPTS}" ]; then
		procd_send_signal nginx
	else
		restart
	fi
}

service_triggers() {
	procd_add_raw_trigger acme.renew 5000 /etc/init.d/nginx reload
}

extra_command "relog" "Reopen log files (without reloading)"
relog() {
	[ -d /var/log/nginx ] || mkdir -p /var/log/nginx
	procd_send_signal nginx '*' USR1
}
